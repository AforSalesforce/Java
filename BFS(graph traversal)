import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class BFS {
	private static Queue<Integer> q;
	public BFS()
	{
		q=new LinkedList<Integer>();
	}
	public static void bfs(int adj[][],int source)
	{
		int len=adj[source].length-1;
		int visited[]=new int[len+1];
		int element=source;
		int i=source;
		visited[source]=1;
		q.add(source);
		while(!q.isEmpty())
		{
			element=q.remove();
			i=element;
			System.out.println(element+"\t");
			while(i<=len)
			{
				if(adj[element][i]==1&&visited[i]==0)
				{
					q.add(i);
					visited[i]=1;
				}
				i++;
			}
			
		}
	}
	

	public static void main(String[] args) {
		Scanner in=new Scanner(System.in);
		System.out.println("Entre the number of nodes");
		int node=in.nextInt();
		System.out.println("Enter the adjacency matrix of the graph");
		int adj[][]=new int[node][node];
		for(int i=0;i<node;i++)
		{
			for(int j=0;j<node;j++)
			{
				adj[i][j]=in.nextInt();
			}
		}
		System.out.println("Enter the source node");
		int s=in.nextInt();
		BFS b=new BFS();
		b.bfs(adj, s);
		

	}

}
